;S
1000 0 _ r 1o
1000 1 _ r 1i
1000 _ _ * accept
1o _ _ l 2o
1o * * r 1o
1i _ _ l 2i
1i * * r 1i
2o 0 _ l 1003
2o _ _ * accept
2o * * * reject
2i 1 _ l 1003
2i _ _ * accept
2i * * * reject
1003 _ _ * accept
1003 * * l 1004
1004 * * l 1004
1004 _ _ r 1000
accept * : r accept2
accept2 * ) * halt-accept
reject _ : r reject2
reject * _ l reject
reject2 * ( * halt-reject
0 0 0 r 0
0 1 1 r 0
0 _ ] l 1
1 0 # r 10
1 1 # r 11
1 # [ r 1000
10 # 0 * 1w
10 _ 0 * 1w
11 # 1 * 1w
11 _ 1 * 1w
1w 0 0 l 1w
1w 1 1 l 1w
1w # # l 1
1w [ [ r 1w_MT2_q0
1w_MT2_q3 [ [ r 1w
1w_MT2_q0 ] _ r 1w_MT2_q]
1w_MT2_q] _ ] l 1w_MT2_qa
1w_MT2_qa _ # l 1w_MT2_qa
1w_MT2_q1 _ _ l 1w_MT2_q1
1w_MT2_q0 : : r 1w_MT2_q0
1w_MT2_q1 : # r 1w_MT2_q1:
1w_MT2_q1: # : l 1w_MT2_q1w
1w_MT2_qa : # r 1w_MT2_q1:
1w_MT2_q2 : : r 1w_MT2_q2
1w_MT2_q3 : : l 1w_MT2_q3
1w_MT2_q0 0 0 r 1w_MT2_q0
1w_MT2_q1 0 # r 1w_MT2_q10
1w_MT2_q10 # 0 l 1w_MT2_q1w
1w_MT2_qa 0 # r 1w_MT2_q10
1w_MT2_q2 0 0 r 1w_MT2_q2
1w_MT2_q3 0 0 l 1w_MT2_q3
1w_MT2_q0 1 1 r 1w_MT2_q0
1w_MT2_q1 1 # r 1w_MT2_q11
1w_MT2_q11 # 1 l 1w_MT2_q1w
1w_MT2_qa 1 # r 1w_MT2_q11
1w_MT2_q2 1 1 r 1w_MT2_q2
1w_MT2_q3 1 1 l 1w_MT2_q3
1w_MT2_q0 ) ) r 1w_MT2_q0
1w_MT2_q1 ) # r 1w_MT2_q1)
1w_MT2_q1) # ) l 1w_MT2_q1w
1w_MT2_qa ) # r 1w_MT2_q1)
1w_MT2_q2 ) ) r 1w_MT2_q2
1w_MT2_q3 ) ) l 1w_MT2_q3
1w_MT2_q0 ( ( r 1w_MT2_q0
1w_MT2_q1 ( # r 1w_MT2_q1(
1w_MT2_q1( # ( l 1w_MT2_q1w
1w_MT2_qa ( # r 1w_MT2_q1(
1w_MT2_q2 ( ( r 1w_MT2_q2
1w_MT2_q3 ( ( l 1w_MT2_q3
1w_MT2_q0 _ _ r 1w_MT2_q0
1w_MT2_q2 _ _ r 1w_MT2_q2
1w_MT2_q3 _ _ l 1w_MT2_q3
1w_MT2_q0 * * r 1w_MT2_q0
1w_MT2_q1 * # r 1w_MT2_q1*
1w_MT2_q1* # * l 1w_MT2_q1w
1w_MT2_qa * # r 1w_MT2_q1*
1w_MT2_q2 * * r 1w_MT2_q2
1w_MT2_q3 * * l 1w_MT2_q3
1w_MT2_q1 [ [ r 1w_MT2_q2
1w_MT2_q1w # # l 1w_MT2_q1
1w_MT2_q2 # _ r 1w_MT2_q2
1w_MT2_q2 ] ] l 1w_MT2_q3
2i [ [ r 2i_MT2_q0
2i_MT2_q3 [ [ r 2i
2i_MT2_q0 ] _ r 2i_MT2_q]
2i_MT2_q] _ ] l 2i_MT2_qa
2i_MT2_qa _ # l 2i_MT2_qa
2i_MT2_q1 _ _ l 2i_MT2_q1
2i_MT2_q0 : : r 2i_MT2_q0
2i_MT2_q1 : # r 2i_MT2_q1:
2i_MT2_q1: # : l 2i_MT2_q1w
2i_MT2_qa : # r 2i_MT2_q1:
2i_MT2_q2 : : r 2i_MT2_q2
2i_MT2_q3 : : l 2i_MT2_q3
2i_MT2_q0 0 0 r 2i_MT2_q0
2i_MT2_q1 0 # r 2i_MT2_q10
2i_MT2_q10 # 0 l 2i_MT2_q1w
2i_MT2_qa 0 # r 2i_MT2_q10
2i_MT2_q2 0 0 r 2i_MT2_q2
2i_MT2_q3 0 0 l 2i_MT2_q3
2i_MT2_q0 1 1 r 2i_MT2_q0
2i_MT2_q1 1 # r 2i_MT2_q11
2i_MT2_q11 # 1 l 2i_MT2_q1w
2i_MT2_qa 1 # r 2i_MT2_q11
2i_MT2_q2 1 1 r 2i_MT2_q2
2i_MT2_q3 1 1 l 2i_MT2_q3
2i_MT2_q0 ) ) r 2i_MT2_q0
2i_MT2_q1 ) # r 2i_MT2_q1)
2i_MT2_q1) # ) l 2i_MT2_q1w
2i_MT2_qa ) # r 2i_MT2_q1)
2i_MT2_q2 ) ) r 2i_MT2_q2
2i_MT2_q3 ) ) l 2i_MT2_q3
2i_MT2_q0 ( ( r 2i_MT2_q0
2i_MT2_q1 ( # r 2i_MT2_q1(
2i_MT2_q1( # ( l 2i_MT2_q1w
2i_MT2_qa ( # r 2i_MT2_q1(
2i_MT2_q2 ( ( r 2i_MT2_q2
2i_MT2_q3 ( ( l 2i_MT2_q3
2i_MT2_q0 _ _ r 2i_MT2_q0
2i_MT2_q2 _ _ r 2i_MT2_q2
2i_MT2_q3 _ _ l 2i_MT2_q3
2i_MT2_q0 * * r 2i_MT2_q0
2i_MT2_q1 * # r 2i_MT2_q1*
2i_MT2_q1* # * l 2i_MT2_q1w
2i_MT2_qa * # r 2i_MT2_q1*
2i_MT2_q2 * * r 2i_MT2_q2
2i_MT2_q3 * * l 2i_MT2_q3
2i_MT2_q1 [ [ r 2i_MT2_q2
2i_MT2_q1w # # l 2i_MT2_q1
2i_MT2_q2 # _ r 2i_MT2_q2
2i_MT2_q2 ] ] l 2i_MT2_q3
1003 [ [ r 1003_MT2_q0
1003_MT2_q3 [ [ r 1003
1003_MT2_q0 ] _ r 1003_MT2_q]
1003_MT2_q] _ ] l 1003_MT2_qa
1003_MT2_qa _ # l 1003_MT2_qa
1003_MT2_q1 _ _ l 1003_MT2_q1
1003_MT2_q0 : : r 1003_MT2_q0
1003_MT2_q1 : # r 1003_MT2_q1:
1003_MT2_q1: # : l 1003_MT2_q1w
1003_MT2_qa : # r 1003_MT2_q1:
1003_MT2_q2 : : r 1003_MT2_q2
1003_MT2_q3 : : l 1003_MT2_q3
1003_MT2_q0 0 0 r 1003_MT2_q0
1003_MT2_q1 0 # r 1003_MT2_q10
1003_MT2_q10 # 0 l 1003_MT2_q1w
1003_MT2_qa 0 # r 1003_MT2_q10
1003_MT2_q2 0 0 r 1003_MT2_q2
1003_MT2_q3 0 0 l 1003_MT2_q3
1003_MT2_q0 1 1 r 1003_MT2_q0
1003_MT2_q1 1 # r 1003_MT2_q11
1003_MT2_q11 # 1 l 1003_MT2_q1w
1003_MT2_qa 1 # r 1003_MT2_q11
1003_MT2_q2 1 1 r 1003_MT2_q2
1003_MT2_q3 1 1 l 1003_MT2_q3
1003_MT2_q0 ) ) r 1003_MT2_q0
1003_MT2_q1 ) # r 1003_MT2_q1)
1003_MT2_q1) # ) l 1003_MT2_q1w
1003_MT2_qa ) # r 1003_MT2_q1)
1003_MT2_q2 ) ) r 1003_MT2_q2
1003_MT2_q3 ) ) l 1003_MT2_q3
1003_MT2_q0 ( ( r 1003_MT2_q0
1003_MT2_q1 ( # r 1003_MT2_q1(
1003_MT2_q1( # ( l 1003_MT2_q1w
1003_MT2_qa ( # r 1003_MT2_q1(
1003_MT2_q2 ( ( r 1003_MT2_q2
1003_MT2_q3 ( ( l 1003_MT2_q3
1003_MT2_q0 _ _ r 1003_MT2_q0
1003_MT2_q2 _ _ r 1003_MT2_q2
1003_MT2_q3 _ _ l 1003_MT2_q3
1003_MT2_q0 * * r 1003_MT2_q0
1003_MT2_q1 * # r 1003_MT2_q1*
1003_MT2_q1* # * l 1003_MT2_q1w
1003_MT2_qa * # r 1003_MT2_q1*
1003_MT2_q2 * * r 1003_MT2_q2
1003_MT2_q3 * * l 1003_MT2_q3
1003_MT2_q1 [ [ r 1003_MT2_q2
1003_MT2_q1w # # l 1003_MT2_q1
1003_MT2_q2 # _ r 1003_MT2_q2
1003_MT2_q2 ] ] l 1003_MT2_q3
11 [ [ r 11_MT2_q0
11_MT2_q3 [ [ r 11
11_MT2_q0 ] _ r 11_MT2_q]
11_MT2_q] _ ] l 11_MT2_qa
11_MT2_qa _ # l 11_MT2_qa
11_MT2_q1 _ _ l 11_MT2_q1
11_MT2_q0 : : r 11_MT2_q0
11_MT2_q1 : # r 11_MT2_q1:
11_MT2_q1: # : l 11_MT2_q1w
11_MT2_qa : # r 11_MT2_q1:
11_MT2_q2 : : r 11_MT2_q2
11_MT2_q3 : : l 11_MT2_q3
11_MT2_q0 0 0 r 11_MT2_q0
11_MT2_q1 0 # r 11_MT2_q10
11_MT2_q10 # 0 l 11_MT2_q1w
11_MT2_qa 0 # r 11_MT2_q10
11_MT2_q2 0 0 r 11_MT2_q2
11_MT2_q3 0 0 l 11_MT2_q3
11_MT2_q0 1 1 r 11_MT2_q0
11_MT2_q1 1 # r 11_MT2_q11
11_MT2_q11 # 1 l 11_MT2_q1w
11_MT2_qa 1 # r 11_MT2_q11
11_MT2_q2 1 1 r 11_MT2_q2
11_MT2_q3 1 1 l 11_MT2_q3
11_MT2_q0 ) ) r 11_MT2_q0
11_MT2_q1 ) # r 11_MT2_q1)
11_MT2_q1) # ) l 11_MT2_q1w
11_MT2_qa ) # r 11_MT2_q1)
11_MT2_q2 ) ) r 11_MT2_q2
11_MT2_q3 ) ) l 11_MT2_q3
11_MT2_q0 ( ( r 11_MT2_q0
11_MT2_q1 ( # r 11_MT2_q1(
11_MT2_q1( # ( l 11_MT2_q1w
11_MT2_qa ( # r 11_MT2_q1(
11_MT2_q2 ( ( r 11_MT2_q2
11_MT2_q3 ( ( l 11_MT2_q3
11_MT2_q0 _ _ r 11_MT2_q0
11_MT2_q2 _ _ r 11_MT2_q2
11_MT2_q3 _ _ l 11_MT2_q3
11_MT2_q0 * * r 11_MT2_q0
11_MT2_q1 * # r 11_MT2_q1*
11_MT2_q1* # * l 11_MT2_q1w
11_MT2_qa * # r 11_MT2_q1*
11_MT2_q2 * * r 11_MT2_q2
11_MT2_q3 * * l 11_MT2_q3
11_MT2_q1 [ [ r 11_MT2_q2
11_MT2_q1w # # l 11_MT2_q1
11_MT2_q2 # _ r 11_MT2_q2
11_MT2_q2 ] ] l 11_MT2_q3
0 [ [ r 0_MT2_q0
0_MT2_q3 [ [ r 0
0_MT2_q0 ] _ r 0_MT2_q]
0_MT2_q] _ ] l 0_MT2_qa
0_MT2_qa _ # l 0_MT2_qa
0_MT2_q1 _ _ l 0_MT2_q1
0_MT2_q0 : : r 0_MT2_q0
0_MT2_q1 : # r 0_MT2_q1:
0_MT2_q1: # : l 0_MT2_q1w
0_MT2_qa : # r 0_MT2_q1:
0_MT2_q2 : : r 0_MT2_q2
0_MT2_q3 : : l 0_MT2_q3
0_MT2_q0 0 0 r 0_MT2_q0
0_MT2_q1 0 # r 0_MT2_q10
0_MT2_q10 # 0 l 0_MT2_q1w
0_MT2_qa 0 # r 0_MT2_q10
0_MT2_q2 0 0 r 0_MT2_q2
0_MT2_q3 0 0 l 0_MT2_q3
0_MT2_q0 1 1 r 0_MT2_q0
0_MT2_q1 1 # r 0_MT2_q11
0_MT2_q11 # 1 l 0_MT2_q1w
0_MT2_qa 1 # r 0_MT2_q11
0_MT2_q2 1 1 r 0_MT2_q2
0_MT2_q3 1 1 l 0_MT2_q3
0_MT2_q0 ) ) r 0_MT2_q0
0_MT2_q1 ) # r 0_MT2_q1)
0_MT2_q1) # ) l 0_MT2_q1w
0_MT2_qa ) # r 0_MT2_q1)
0_MT2_q2 ) ) r 0_MT2_q2
0_MT2_q3 ) ) l 0_MT2_q3
0_MT2_q0 ( ( r 0_MT2_q0
0_MT2_q1 ( # r 0_MT2_q1(
0_MT2_q1( # ( l 0_MT2_q1w
0_MT2_qa ( # r 0_MT2_q1(
0_MT2_q2 ( ( r 0_MT2_q2
0_MT2_q3 ( ( l 0_MT2_q3
0_MT2_q0 _ _ r 0_MT2_q0
0_MT2_q2 _ _ r 0_MT2_q2
0_MT2_q3 _ _ l 0_MT2_q3
0_MT2_q0 * * r 0_MT2_q0
0_MT2_q1 * # r 0_MT2_q1*
0_MT2_q1* # * l 0_MT2_q1w
0_MT2_qa * # r 0_MT2_q1*
0_MT2_q2 * * r 0_MT2_q2
0_MT2_q3 * * l 0_MT2_q3
0_MT2_q1 [ [ r 0_MT2_q2
0_MT2_q1w # # l 0_MT2_q1
0_MT2_q2 # _ r 0_MT2_q2
0_MT2_q2 ] ] l 0_MT2_q3
1 [ [ r 1_MT2_q0
1_MT2_q3 [ [ r 1
1_MT2_q0 ] _ r 1_MT2_q]
1_MT2_q] _ ] l 1_MT2_qa
1_MT2_qa _ # l 1_MT2_qa
1_MT2_q1 _ _ l 1_MT2_q1
1_MT2_q0 : : r 1_MT2_q0
1_MT2_q1 : # r 1_MT2_q1:
1_MT2_q1: # : l 1_MT2_q1w
1_MT2_qa : # r 1_MT2_q1:
1_MT2_q2 : : r 1_MT2_q2
1_MT2_q3 : : l 1_MT2_q3
1_MT2_q0 0 0 r 1_MT2_q0
1_MT2_q1 0 # r 1_MT2_q10
1_MT2_q10 # 0 l 1_MT2_q1w
1_MT2_qa 0 # r 1_MT2_q10
1_MT2_q2 0 0 r 1_MT2_q2
1_MT2_q3 0 0 l 1_MT2_q3
1_MT2_q0 1 1 r 1_MT2_q0
1_MT2_q1 1 # r 1_MT2_q11
1_MT2_q11 # 1 l 1_MT2_q1w
1_MT2_qa 1 # r 1_MT2_q11
1_MT2_q2 1 1 r 1_MT2_q2
1_MT2_q3 1 1 l 1_MT2_q3
1_MT2_q0 ) ) r 1_MT2_q0
1_MT2_q1 ) # r 1_MT2_q1)
1_MT2_q1) # ) l 1_MT2_q1w
1_MT2_qa ) # r 1_MT2_q1)
1_MT2_q2 ) ) r 1_MT2_q2
1_MT2_q3 ) ) l 1_MT2_q3
1_MT2_q0 ( ( r 1_MT2_q0
1_MT2_q1 ( # r 1_MT2_q1(
1_MT2_q1( # ( l 1_MT2_q1w
1_MT2_qa ( # r 1_MT2_q1(
1_MT2_q2 ( ( r 1_MT2_q2
1_MT2_q3 ( ( l 1_MT2_q3
1_MT2_q0 _ _ r 1_MT2_q0
1_MT2_q2 _ _ r 1_MT2_q2
1_MT2_q3 _ _ l 1_MT2_q3
1_MT2_q0 * * r 1_MT2_q0
1_MT2_q1 * # r 1_MT2_q1*
1_MT2_q1* # * l 1_MT2_q1w
1_MT2_qa * # r 1_MT2_q1*
1_MT2_q2 * * r 1_MT2_q2
1_MT2_q3 * * l 1_MT2_q3
1_MT2_q1 [ [ r 1_MT2_q2
1_MT2_q1w # # l 1_MT2_q1
1_MT2_q2 # _ r 1_MT2_q2
1_MT2_q2 ] ] l 1_MT2_q3
accept2 [ [ r accept2_MT2_q0
accept2_MT2_q3 [ [ r accept2
accept2_MT2_q0 ] _ r accept2_MT2_q]
accept2_MT2_q] _ ] l accept2_MT2_qa
accept2_MT2_qa _ # l accept2_MT2_qa
accept2_MT2_q1 _ _ l accept2_MT2_q1
accept2_MT2_q0 : : r accept2_MT2_q0
accept2_MT2_q1 : # r accept2_MT2_q1:
accept2_MT2_q1: # : l accept2_MT2_q1w
accept2_MT2_qa : # r accept2_MT2_q1:
accept2_MT2_q2 : : r accept2_MT2_q2
accept2_MT2_q3 : : l accept2_MT2_q3
accept2_MT2_q0 0 0 r accept2_MT2_q0
accept2_MT2_q1 0 # r accept2_MT2_q10
accept2_MT2_q10 # 0 l accept2_MT2_q1w
accept2_MT2_qa 0 # r accept2_MT2_q10
accept2_MT2_q2 0 0 r accept2_MT2_q2
accept2_MT2_q3 0 0 l accept2_MT2_q3
accept2_MT2_q0 1 1 r accept2_MT2_q0
accept2_MT2_q1 1 # r accept2_MT2_q11
accept2_MT2_q11 # 1 l accept2_MT2_q1w
accept2_MT2_qa 1 # r accept2_MT2_q11
accept2_MT2_q2 1 1 r accept2_MT2_q2
accept2_MT2_q3 1 1 l accept2_MT2_q3
accept2_MT2_q0 ) ) r accept2_MT2_q0
accept2_MT2_q1 ) # r accept2_MT2_q1)
accept2_MT2_q1) # ) l accept2_MT2_q1w
accept2_MT2_qa ) # r accept2_MT2_q1)
accept2_MT2_q2 ) ) r accept2_MT2_q2
accept2_MT2_q3 ) ) l accept2_MT2_q3
accept2_MT2_q0 ( ( r accept2_MT2_q0
accept2_MT2_q1 ( # r accept2_MT2_q1(
accept2_MT2_q1( # ( l accept2_MT2_q1w
accept2_MT2_qa ( # r accept2_MT2_q1(
accept2_MT2_q2 ( ( r accept2_MT2_q2
accept2_MT2_q3 ( ( l accept2_MT2_q3
accept2_MT2_q0 _ _ r accept2_MT2_q0
accept2_MT2_q2 _ _ r accept2_MT2_q2
accept2_MT2_q3 _ _ l accept2_MT2_q3
accept2_MT2_q0 * * r accept2_MT2_q0
accept2_MT2_q1 * # r accept2_MT2_q1*
accept2_MT2_q1* # * l accept2_MT2_q1w
accept2_MT2_qa * # r accept2_MT2_q1*
accept2_MT2_q2 * * r accept2_MT2_q2
accept2_MT2_q3 * * l accept2_MT2_q3
accept2_MT2_q1 [ [ r accept2_MT2_q2
accept2_MT2_q1w # # l accept2_MT2_q1
accept2_MT2_q2 # _ r accept2_MT2_q2
accept2_MT2_q2 ] ] l accept2_MT2_q3
1i [ [ r 1i_MT2_q0
1i_MT2_q3 [ [ r 1i
1i_MT2_q0 ] _ r 1i_MT2_q]
1i_MT2_q] _ ] l 1i_MT2_qa
1i_MT2_qa _ # l 1i_MT2_qa
1i_MT2_q1 _ _ l 1i_MT2_q1
1i_MT2_q0 : : r 1i_MT2_q0
1i_MT2_q1 : # r 1i_MT2_q1:
1i_MT2_q1: # : l 1i_MT2_q1w
1i_MT2_qa : # r 1i_MT2_q1:
1i_MT2_q2 : : r 1i_MT2_q2
1i_MT2_q3 : : l 1i_MT2_q3
1i_MT2_q0 0 0 r 1i_MT2_q0
1i_MT2_q1 0 # r 1i_MT2_q10
1i_MT2_q10 # 0 l 1i_MT2_q1w
1i_MT2_qa 0 # r 1i_MT2_q10
1i_MT2_q2 0 0 r 1i_MT2_q2
1i_MT2_q3 0 0 l 1i_MT2_q3
1i_MT2_q0 1 1 r 1i_MT2_q0
1i_MT2_q1 1 # r 1i_MT2_q11
1i_MT2_q11 # 1 l 1i_MT2_q1w
1i_MT2_qa 1 # r 1i_MT2_q11
1i_MT2_q2 1 1 r 1i_MT2_q2
1i_MT2_q3 1 1 l 1i_MT2_q3
1i_MT2_q0 ) ) r 1i_MT2_q0
1i_MT2_q1 ) # r 1i_MT2_q1)
1i_MT2_q1) # ) l 1i_MT2_q1w
1i_MT2_qa ) # r 1i_MT2_q1)
1i_MT2_q2 ) ) r 1i_MT2_q2
1i_MT2_q3 ) ) l 1i_MT2_q3
1i_MT2_q0 ( ( r 1i_MT2_q0
1i_MT2_q1 ( # r 1i_MT2_q1(
1i_MT2_q1( # ( l 1i_MT2_q1w
1i_MT2_qa ( # r 1i_MT2_q1(
1i_MT2_q2 ( ( r 1i_MT2_q2
1i_MT2_q3 ( ( l 1i_MT2_q3
1i_MT2_q0 _ _ r 1i_MT2_q0
1i_MT2_q2 _ _ r 1i_MT2_q2
1i_MT2_q3 _ _ l 1i_MT2_q3
1i_MT2_q0 * * r 1i_MT2_q0
1i_MT2_q1 * # r 1i_MT2_q1*
1i_MT2_q1* # * l 1i_MT2_q1w
1i_MT2_qa * # r 1i_MT2_q1*
1i_MT2_q2 * * r 1i_MT2_q2
1i_MT2_q3 * * l 1i_MT2_q3
1i_MT2_q1 [ [ r 1i_MT2_q2
1i_MT2_q1w # # l 1i_MT2_q1
1i_MT2_q2 # _ r 1i_MT2_q2
1i_MT2_q2 ] ] l 1i_MT2_q3
reject [ [ r reject_MT2_q0
reject_MT2_q3 [ [ r reject
reject_MT2_q0 ] _ r reject_MT2_q]
reject_MT2_q] _ ] l reject_MT2_qa
reject_MT2_qa _ # l reject_MT2_qa
reject_MT2_q1 _ _ l reject_MT2_q1
reject_MT2_q0 : : r reject_MT2_q0
reject_MT2_q1 : # r reject_MT2_q1:
reject_MT2_q1: # : l reject_MT2_q1w
reject_MT2_qa : # r reject_MT2_q1:
reject_MT2_q2 : : r reject_MT2_q2
reject_MT2_q3 : : l reject_MT2_q3
reject_MT2_q0 0 0 r reject_MT2_q0
reject_MT2_q1 0 # r reject_MT2_q10
reject_MT2_q10 # 0 l reject_MT2_q1w
reject_MT2_qa 0 # r reject_MT2_q10
reject_MT2_q2 0 0 r reject_MT2_q2
reject_MT2_q3 0 0 l reject_MT2_q3
reject_MT2_q0 1 1 r reject_MT2_q0
reject_MT2_q1 1 # r reject_MT2_q11
reject_MT2_q11 # 1 l reject_MT2_q1w
reject_MT2_qa 1 # r reject_MT2_q11
reject_MT2_q2 1 1 r reject_MT2_q2
reject_MT2_q3 1 1 l reject_MT2_q3
reject_MT2_q0 ) ) r reject_MT2_q0
reject_MT2_q1 ) # r reject_MT2_q1)
reject_MT2_q1) # ) l reject_MT2_q1w
reject_MT2_qa ) # r reject_MT2_q1)
reject_MT2_q2 ) ) r reject_MT2_q2
reject_MT2_q3 ) ) l reject_MT2_q3
reject_MT2_q0 ( ( r reject_MT2_q0
reject_MT2_q1 ( # r reject_MT2_q1(
reject_MT2_q1( # ( l reject_MT2_q1w
reject_MT2_qa ( # r reject_MT2_q1(
reject_MT2_q2 ( ( r reject_MT2_q2
reject_MT2_q3 ( ( l reject_MT2_q3
reject_MT2_q0 _ _ r reject_MT2_q0
reject_MT2_q2 _ _ r reject_MT2_q2
reject_MT2_q3 _ _ l reject_MT2_q3
reject_MT2_q0 * * r reject_MT2_q0
reject_MT2_q1 * # r reject_MT2_q1*
reject_MT2_q1* # * l reject_MT2_q1w
reject_MT2_qa * # r reject_MT2_q1*
reject_MT2_q2 * * r reject_MT2_q2
reject_MT2_q3 * * l reject_MT2_q3
reject_MT2_q1 [ [ r reject_MT2_q2
reject_MT2_q1w # # l reject_MT2_q1
reject_MT2_q2 # _ r reject_MT2_q2
reject_MT2_q2 ] ] l reject_MT2_q3
10 [ [ r 10_MT2_q0
10_MT2_q3 [ [ r 10
10_MT2_q0 ] _ r 10_MT2_q]
10_MT2_q] _ ] l 10_MT2_qa
10_MT2_qa _ # l 10_MT2_qa
10_MT2_q1 _ _ l 10_MT2_q1
10_MT2_q0 : : r 10_MT2_q0
10_MT2_q1 : # r 10_MT2_q1:
10_MT2_q1: # : l 10_MT2_q1w
10_MT2_qa : # r 10_MT2_q1:
10_MT2_q2 : : r 10_MT2_q2
10_MT2_q3 : : l 10_MT2_q3
10_MT2_q0 0 0 r 10_MT2_q0
10_MT2_q1 0 # r 10_MT2_q10
10_MT2_q10 # 0 l 10_MT2_q1w
10_MT2_qa 0 # r 10_MT2_q10
10_MT2_q2 0 0 r 10_MT2_q2
10_MT2_q3 0 0 l 10_MT2_q3
10_MT2_q0 1 1 r 10_MT2_q0
10_MT2_q1 1 # r 10_MT2_q11
10_MT2_q11 # 1 l 10_MT2_q1w
10_MT2_qa 1 # r 10_MT2_q11
10_MT2_q2 1 1 r 10_MT2_q2
10_MT2_q3 1 1 l 10_MT2_q3
10_MT2_q0 ) ) r 10_MT2_q0
10_MT2_q1 ) # r 10_MT2_q1)
10_MT2_q1) # ) l 10_MT2_q1w
10_MT2_qa ) # r 10_MT2_q1)
10_MT2_q2 ) ) r 10_MT2_q2
10_MT2_q3 ) ) l 10_MT2_q3
10_MT2_q0 ( ( r 10_MT2_q0
10_MT2_q1 ( # r 10_MT2_q1(
10_MT2_q1( # ( l 10_MT2_q1w
10_MT2_qa ( # r 10_MT2_q1(
10_MT2_q2 ( ( r 10_MT2_q2
10_MT2_q3 ( ( l 10_MT2_q3
10_MT2_q0 _ _ r 10_MT2_q0
10_MT2_q2 _ _ r 10_MT2_q2
10_MT2_q3 _ _ l 10_MT2_q3
10_MT2_q0 * * r 10_MT2_q0
10_MT2_q1 * # r 10_MT2_q1*
10_MT2_q1* # * l 10_MT2_q1w
10_MT2_qa * # r 10_MT2_q1*
10_MT2_q2 * * r 10_MT2_q2
10_MT2_q3 * * l 10_MT2_q3
10_MT2_q1 [ [ r 10_MT2_q2
10_MT2_q1w # # l 10_MT2_q1
10_MT2_q2 # _ r 10_MT2_q2
10_MT2_q2 ] ] l 10_MT2_q3
1000 [ [ r 1000_MT2_q0
1000_MT2_q3 [ [ r 1000
1000_MT2_q0 ] _ r 1000_MT2_q]
1000_MT2_q] _ ] l 1000_MT2_qa
1000_MT2_qa _ # l 1000_MT2_qa
1000_MT2_q1 _ _ l 1000_MT2_q1
1000_MT2_q0 : : r 1000_MT2_q0
1000_MT2_q1 : # r 1000_MT2_q1:
1000_MT2_q1: # : l 1000_MT2_q1w
1000_MT2_qa : # r 1000_MT2_q1:
1000_MT2_q2 : : r 1000_MT2_q2
1000_MT2_q3 : : l 1000_MT2_q3
1000_MT2_q0 0 0 r 1000_MT2_q0
1000_MT2_q1 0 # r 1000_MT2_q10
1000_MT2_q10 # 0 l 1000_MT2_q1w
1000_MT2_qa 0 # r 1000_MT2_q10
1000_MT2_q2 0 0 r 1000_MT2_q2
1000_MT2_q3 0 0 l 1000_MT2_q3
1000_MT2_q0 1 1 r 1000_MT2_q0
1000_MT2_q1 1 # r 1000_MT2_q11
1000_MT2_q11 # 1 l 1000_MT2_q1w
1000_MT2_qa 1 # r 1000_MT2_q11
1000_MT2_q2 1 1 r 1000_MT2_q2
1000_MT2_q3 1 1 l 1000_MT2_q3
1000_MT2_q0 ) ) r 1000_MT2_q0
1000_MT2_q1 ) # r 1000_MT2_q1)
1000_MT2_q1) # ) l 1000_MT2_q1w
1000_MT2_qa ) # r 1000_MT2_q1)
1000_MT2_q2 ) ) r 1000_MT2_q2
1000_MT2_q3 ) ) l 1000_MT2_q3
1000_MT2_q0 ( ( r 1000_MT2_q0
1000_MT2_q1 ( # r 1000_MT2_q1(
1000_MT2_q1( # ( l 1000_MT2_q1w
1000_MT2_qa ( # r 1000_MT2_q1(
1000_MT2_q2 ( ( r 1000_MT2_q2
1000_MT2_q3 ( ( l 1000_MT2_q3
1000_MT2_q0 _ _ r 1000_MT2_q0
1000_MT2_q2 _ _ r 1000_MT2_q2
1000_MT2_q3 _ _ l 1000_MT2_q3
1000_MT2_q0 * * r 1000_MT2_q0
1000_MT2_q1 * # r 1000_MT2_q1*
1000_MT2_q1* # * l 1000_MT2_q1w
1000_MT2_qa * # r 1000_MT2_q1*
1000_MT2_q2 * * r 1000_MT2_q2
1000_MT2_q3 * * l 1000_MT2_q3
1000_MT2_q1 [ [ r 1000_MT2_q2
1000_MT2_q1w # # l 1000_MT2_q1
1000_MT2_q2 # _ r 1000_MT2_q2
1000_MT2_q2 ] ] l 1000_MT2_q3
2o [ [ r 2o_MT2_q0
2o_MT2_q3 [ [ r 2o
2o_MT2_q0 ] _ r 2o_MT2_q]
2o_MT2_q] _ ] l 2o_MT2_qa
2o_MT2_qa _ # l 2o_MT2_qa
2o_MT2_q1 _ _ l 2o_MT2_q1
2o_MT2_q0 : : r 2o_MT2_q0
2o_MT2_q1 : # r 2o_MT2_q1:
2o_MT2_q1: # : l 2o_MT2_q1w
2o_MT2_qa : # r 2o_MT2_q1:
2o_MT2_q2 : : r 2o_MT2_q2
2o_MT2_q3 : : l 2o_MT2_q3
2o_MT2_q0 0 0 r 2o_MT2_q0
2o_MT2_q1 0 # r 2o_MT2_q10
2o_MT2_q10 # 0 l 2o_MT2_q1w
2o_MT2_qa 0 # r 2o_MT2_q10
2o_MT2_q2 0 0 r 2o_MT2_q2
2o_MT2_q3 0 0 l 2o_MT2_q3
2o_MT2_q0 1 1 r 2o_MT2_q0
2o_MT2_q1 1 # r 2o_MT2_q11
2o_MT2_q11 # 1 l 2o_MT2_q1w
2o_MT2_qa 1 # r 2o_MT2_q11
2o_MT2_q2 1 1 r 2o_MT2_q2
2o_MT2_q3 1 1 l 2o_MT2_q3
2o_MT2_q0 ) ) r 2o_MT2_q0
2o_MT2_q1 ) # r 2o_MT2_q1)
2o_MT2_q1) # ) l 2o_MT2_q1w
2o_MT2_qa ) # r 2o_MT2_q1)
2o_MT2_q2 ) ) r 2o_MT2_q2
2o_MT2_q3 ) ) l 2o_MT2_q3
2o_MT2_q0 ( ( r 2o_MT2_q0
2o_MT2_q1 ( # r 2o_MT2_q1(
2o_MT2_q1( # ( l 2o_MT2_q1w
2o_MT2_qa ( # r 2o_MT2_q1(
2o_MT2_q2 ( ( r 2o_MT2_q2
2o_MT2_q3 ( ( l 2o_MT2_q3
2o_MT2_q0 _ _ r 2o_MT2_q0
2o_MT2_q2 _ _ r 2o_MT2_q2
2o_MT2_q3 _ _ l 2o_MT2_q3
2o_MT2_q0 * * r 2o_MT2_q0
2o_MT2_q1 * # r 2o_MT2_q1*
2o_MT2_q1* # * l 2o_MT2_q1w
2o_MT2_qa * # r 2o_MT2_q1*
2o_MT2_q2 * * r 2o_MT2_q2
2o_MT2_q3 * * l 2o_MT2_q3
2o_MT2_q1 [ [ r 2o_MT2_q2
2o_MT2_q1w # # l 2o_MT2_q1
2o_MT2_q2 # _ r 2o_MT2_q2
2o_MT2_q2 ] ] l 2o_MT2_q3
accept [ [ r accept_MT2_q0
accept_MT2_q3 [ [ r accept
accept_MT2_q0 ] _ r accept_MT2_q]
accept_MT2_q] _ ] l accept_MT2_qa
accept_MT2_qa _ # l accept_MT2_qa
accept_MT2_q1 _ _ l accept_MT2_q1
accept_MT2_q0 : : r accept_MT2_q0
accept_MT2_q1 : # r accept_MT2_q1:
accept_MT2_q1: # : l accept_MT2_q1w
accept_MT2_qa : # r accept_MT2_q1:
accept_MT2_q2 : : r accept_MT2_q2
accept_MT2_q3 : : l accept_MT2_q3
accept_MT2_q0 0 0 r accept_MT2_q0
accept_MT2_q1 0 # r accept_MT2_q10
accept_MT2_q10 # 0 l accept_MT2_q1w
accept_MT2_qa 0 # r accept_MT2_q10
accept_MT2_q2 0 0 r accept_MT2_q2
accept_MT2_q3 0 0 l accept_MT2_q3
accept_MT2_q0 1 1 r accept_MT2_q0
accept_MT2_q1 1 # r accept_MT2_q11
accept_MT2_q11 # 1 l accept_MT2_q1w
accept_MT2_qa 1 # r accept_MT2_q11
accept_MT2_q2 1 1 r accept_MT2_q2
accept_MT2_q3 1 1 l accept_MT2_q3
accept_MT2_q0 ) ) r accept_MT2_q0
accept_MT2_q1 ) # r accept_MT2_q1)
accept_MT2_q1) # ) l accept_MT2_q1w
accept_MT2_qa ) # r accept_MT2_q1)
accept_MT2_q2 ) ) r accept_MT2_q2
accept_MT2_q3 ) ) l accept_MT2_q3
accept_MT2_q0 ( ( r accept_MT2_q0
accept_MT2_q1 ( # r accept_MT2_q1(
accept_MT2_q1( # ( l accept_MT2_q1w
accept_MT2_qa ( # r accept_MT2_q1(
accept_MT2_q2 ( ( r accept_MT2_q2
accept_MT2_q3 ( ( l accept_MT2_q3
accept_MT2_q0 _ _ r accept_MT2_q0
accept_MT2_q2 _ _ r accept_MT2_q2
accept_MT2_q3 _ _ l accept_MT2_q3
accept_MT2_q0 * * r accept_MT2_q0
accept_MT2_q1 * # r accept_MT2_q1*
accept_MT2_q1* # * l accept_MT2_q1w
accept_MT2_qa * # r accept_MT2_q1*
accept_MT2_q2 * * r accept_MT2_q2
accept_MT2_q3 * * l accept_MT2_q3
accept_MT2_q1 [ [ r accept_MT2_q2
accept_MT2_q1w # # l accept_MT2_q1
accept_MT2_q2 # _ r accept_MT2_q2
accept_MT2_q2 ] ] l accept_MT2_q3
1004 [ [ r 1004_MT2_q0
1004_MT2_q3 [ [ r 1004
1004_MT2_q0 ] _ r 1004_MT2_q]
1004_MT2_q] _ ] l 1004_MT2_qa
1004_MT2_qa _ # l 1004_MT2_qa
1004_MT2_q1 _ _ l 1004_MT2_q1
1004_MT2_q0 : : r 1004_MT2_q0
1004_MT2_q1 : # r 1004_MT2_q1:
1004_MT2_q1: # : l 1004_MT2_q1w
1004_MT2_qa : # r 1004_MT2_q1:
1004_MT2_q2 : : r 1004_MT2_q2
1004_MT2_q3 : : l 1004_MT2_q3
1004_MT2_q0 0 0 r 1004_MT2_q0
1004_MT2_q1 0 # r 1004_MT2_q10
1004_MT2_q10 # 0 l 1004_MT2_q1w
1004_MT2_qa 0 # r 1004_MT2_q10
1004_MT2_q2 0 0 r 1004_MT2_q2
1004_MT2_q3 0 0 l 1004_MT2_q3
1004_MT2_q0 1 1 r 1004_MT2_q0
1004_MT2_q1 1 # r 1004_MT2_q11
1004_MT2_q11 # 1 l 1004_MT2_q1w
1004_MT2_qa 1 # r 1004_MT2_q11
1004_MT2_q2 1 1 r 1004_MT2_q2
1004_MT2_q3 1 1 l 1004_MT2_q3
1004_MT2_q0 ) ) r 1004_MT2_q0
1004_MT2_q1 ) # r 1004_MT2_q1)
1004_MT2_q1) # ) l 1004_MT2_q1w
1004_MT2_qa ) # r 1004_MT2_q1)
1004_MT2_q2 ) ) r 1004_MT2_q2
1004_MT2_q3 ) ) l 1004_MT2_q3
1004_MT2_q0 ( ( r 1004_MT2_q0
1004_MT2_q1 ( # r 1004_MT2_q1(
1004_MT2_q1( # ( l 1004_MT2_q1w
1004_MT2_qa ( # r 1004_MT2_q1(
1004_MT2_q2 ( ( r 1004_MT2_q2
1004_MT2_q3 ( ( l 1004_MT2_q3
1004_MT2_q0 _ _ r 1004_MT2_q0
1004_MT2_q2 _ _ r 1004_MT2_q2
1004_MT2_q3 _ _ l 1004_MT2_q3
1004_MT2_q0 * * r 1004_MT2_q0
1004_MT2_q1 * # r 1004_MT2_q1*
1004_MT2_q1* # * l 1004_MT2_q1w
1004_MT2_qa * # r 1004_MT2_q1*
1004_MT2_q2 * * r 1004_MT2_q2
1004_MT2_q3 * * l 1004_MT2_q3
1004_MT2_q1 [ [ r 1004_MT2_q2
1004_MT2_q1w # # l 1004_MT2_q1
1004_MT2_q2 # _ r 1004_MT2_q2
1004_MT2_q2 ] ] l 1004_MT2_q3
1o [ [ r 1o_MT2_q0
1o_MT2_q3 [ [ r 1o
1o_MT2_q0 ] _ r 1o_MT2_q]
1o_MT2_q] _ ] l 1o_MT2_qa
1o_MT2_qa _ # l 1o_MT2_qa
1o_MT2_q1 _ _ l 1o_MT2_q1
1o_MT2_q0 : : r 1o_MT2_q0
1o_MT2_q1 : # r 1o_MT2_q1:
1o_MT2_q1: # : l 1o_MT2_q1w
1o_MT2_qa : # r 1o_MT2_q1:
1o_MT2_q2 : : r 1o_MT2_q2
1o_MT2_q3 : : l 1o_MT2_q3
1o_MT2_q0 0 0 r 1o_MT2_q0
1o_MT2_q1 0 # r 1o_MT2_q10
1o_MT2_q10 # 0 l 1o_MT2_q1w
1o_MT2_qa 0 # r 1o_MT2_q10
1o_MT2_q2 0 0 r 1o_MT2_q2
1o_MT2_q3 0 0 l 1o_MT2_q3
1o_MT2_q0 1 1 r 1o_MT2_q0
1o_MT2_q1 1 # r 1o_MT2_q11
1o_MT2_q11 # 1 l 1o_MT2_q1w
1o_MT2_qa 1 # r 1o_MT2_q11
1o_MT2_q2 1 1 r 1o_MT2_q2
1o_MT2_q3 1 1 l 1o_MT2_q3
1o_MT2_q0 ) ) r 1o_MT2_q0
1o_MT2_q1 ) # r 1o_MT2_q1)
1o_MT2_q1) # ) l 1o_MT2_q1w
1o_MT2_qa ) # r 1o_MT2_q1)
1o_MT2_q2 ) ) r 1o_MT2_q2
1o_MT2_q3 ) ) l 1o_MT2_q3
1o_MT2_q0 ( ( r 1o_MT2_q0
1o_MT2_q1 ( # r 1o_MT2_q1(
1o_MT2_q1( # ( l 1o_MT2_q1w
1o_MT2_qa ( # r 1o_MT2_q1(
1o_MT2_q2 ( ( r 1o_MT2_q2
1o_MT2_q3 ( ( l 1o_MT2_q3
1o_MT2_q0 _ _ r 1o_MT2_q0
1o_MT2_q2 _ _ r 1o_MT2_q2
1o_MT2_q3 _ _ l 1o_MT2_q3
1o_MT2_q0 * * r 1o_MT2_q0
1o_MT2_q1 * # r 1o_MT2_q1*
1o_MT2_q1* # * l 1o_MT2_q1w
1o_MT2_qa * # r 1o_MT2_q1*
1o_MT2_q2 * * r 1o_MT2_q2
1o_MT2_q3 * * l 1o_MT2_q3
1o_MT2_q1 [ [ r 1o_MT2_q2
1o_MT2_q1w # # l 1o_MT2_q1
1o_MT2_q2 # _ r 1o_MT2_q2
1o_MT2_q2 ] ] l 1o_MT2_q3
reject2 [ [ r reject2_MT2_q0
reject2_MT2_q3 [ [ r reject2
reject2_MT2_q0 ] _ r reject2_MT2_q]
reject2_MT2_q] _ ] l reject2_MT2_qa
reject2_MT2_qa _ # l reject2_MT2_qa
reject2_MT2_q1 _ _ l reject2_MT2_q1
reject2_MT2_q0 : : r reject2_MT2_q0
reject2_MT2_q1 : # r reject2_MT2_q1:
reject2_MT2_q1: # : l reject2_MT2_q1w
reject2_MT2_qa : # r reject2_MT2_q1:
reject2_MT2_q2 : : r reject2_MT2_q2
reject2_MT2_q3 : : l reject2_MT2_q3
reject2_MT2_q0 0 0 r reject2_MT2_q0
reject2_MT2_q1 0 # r reject2_MT2_q10
reject2_MT2_q10 # 0 l reject2_MT2_q1w
reject2_MT2_qa 0 # r reject2_MT2_q10
reject2_MT2_q2 0 0 r reject2_MT2_q2
reject2_MT2_q3 0 0 l reject2_MT2_q3
reject2_MT2_q0 1 1 r reject2_MT2_q0
reject2_MT2_q1 1 # r reject2_MT2_q11
reject2_MT2_q11 # 1 l reject2_MT2_q1w
reject2_MT2_qa 1 # r reject2_MT2_q11
reject2_MT2_q2 1 1 r reject2_MT2_q2
reject2_MT2_q3 1 1 l reject2_MT2_q3
reject2_MT2_q0 ) ) r reject2_MT2_q0
reject2_MT2_q1 ) # r reject2_MT2_q1)
reject2_MT2_q1) # ) l reject2_MT2_q1w
reject2_MT2_qa ) # r reject2_MT2_q1)
reject2_MT2_q2 ) ) r reject2_MT2_q2
reject2_MT2_q3 ) ) l reject2_MT2_q3
reject2_MT2_q0 ( ( r reject2_MT2_q0
reject2_MT2_q1 ( # r reject2_MT2_q1(
reject2_MT2_q1( # ( l reject2_MT2_q1w
reject2_MT2_qa ( # r reject2_MT2_q1(
reject2_MT2_q2 ( ( r reject2_MT2_q2
reject2_MT2_q3 ( ( l reject2_MT2_q3
reject2_MT2_q0 _ _ r reject2_MT2_q0
reject2_MT2_q2 _ _ r reject2_MT2_q2
reject2_MT2_q3 _ _ l reject2_MT2_q3
reject2_MT2_q0 * * r reject2_MT2_q0
reject2_MT2_q1 * # r reject2_MT2_q1*
reject2_MT2_q1* # * l reject2_MT2_q1w
reject2_MT2_qa * # r reject2_MT2_q1*
reject2_MT2_q2 * * r reject2_MT2_q2
reject2_MT2_q3 * * l reject2_MT2_q3
reject2_MT2_q1 [ [ r reject2_MT2_q2
reject2_MT2_q1w # # l reject2_MT2_q1
reject2_MT2_q2 # _ r reject2_MT2_q2
reject2_MT2_q2 ] ] l reject2_MT2_q3
1i ] _ r MT3_1i
MT3_1i _ ] l 1i
1o ] _ r MT3_1o
MT3_1o _ ] l 1o
accept ] _ r MT3_accept
MT3_accept _ ] l accept
2o ] _ r MT3_2o
MT3_2o _ ] l 2o
0 ] _ r MT3_0
MT3_0 _ ] l 0
1 ] _ r MT3_1
MT3_1 _ ] l 1
11 ] _ r MT3_11
MT3_11 _ ] l 11
reject ] _ r MT3_reject
MT3_reject _ ] l reject
2i ] _ r MT3_2i
MT3_2i _ ] l 2i
1003 ] _ r MT3_1003
MT3_1003 _ ] l 1003
accept2 ] _ r MT3_accept2
MT3_accept2 _ ] l accept2
10 ] _ r MT3_10
MT3_10 _ ] l 10
1004 ] _ r MT3_1004
MT3_1004 _ ] l 1004
reject2 ] _ r MT3_reject2
MT3_reject2 _ ] l reject2
1w ] _ r MT3_1w
MT3_1w _ ] l 1w
1000 ] _ r MT3_1000
MT3_1000 _ ] l 1000
